<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
		
		
	
		<!--Spring3.1之前的注解 HandlerMapping -->
		<!--<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/> -->
    
    	<!--Spring3.1之前的注解 HandlerAdapter -->
		<!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> -->
	        <!--线程安全的访问session-->
			<!--<property name="synchronizeOnSession" value="true"/> -->
		<!--</bean>  -->
	
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />

	<bean id="webBindingInitializer" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
		<property name="conversionService" ref="conversionService"/>
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer" ref="webBindingInitializer"/>
	</bean>
	
	<!--Spring3.1开始的注解 HandlerMapping -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> 
    
    <!--Spring3.1开始的注解 HandlerAdapter -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <!--线程安全的访问session-->
        <property name="synchronizeOnSession" value="true"/>
	</bean>
    
    
    
    <!-- 文件上传处理 -->
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->
         <!-- setting maximum upload size -->
         
        <!-- 不写 不限制上传大小
        <property name="maxUploadSize" value="1500000" />-->
        <!-- 延迟验证文件大小 可以自定义异常 -->
        <!-- <property name="resolveLazily" value="true"/> -->
    <!-- </bean> -->
	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->  
	<!-- <bean id="exceptionResolver"  
        class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面  
                <prop  
                    key="org.springframework.web.multipart.MaxUploadSizeExceededException">error/error_fileupload</prop>  
            </props>  
        </property>  
    </bean> -->
    
    <!-- ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- 处理器 -->
    
    <context:component-scan base-package="com.test.web" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
    
    <!-- 静态资源处理 -->
   	<mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>
	
</beans>
